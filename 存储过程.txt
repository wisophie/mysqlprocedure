DROP PROCEDURE temp5;
delimiter $$

CREATE PROCEDURE temp5()
BEGIN 
   SELECT u.password FROM users u WHERE username='yanlidSS';
END
$$

CALL temp5();

show procedure status
show create procedure temp
drop procedure


delimiter //
CREATE PROCEDURE test8(in pt VARCHAR(50))
BEGIN 
set @a=pt;
SELECT @a;
END //
CALL test8('1235');

delimiter //
CREATE PROCEDURE test8(in pt VARCHAR(50),OUT pu2 VARCHAR(50))
BEGIN 

SET pu2='hell';
END //
CALL test8('1234ss',@b);
SELECT @b;
drop PROCEDURE test8;

delimiter //
CREATE PROCEDURE test8(in pt VARCHAR(50),OUT pu2 VARCHAR(50))
BEGIN 
SET pu2 = pt;
END //
CALL test8('1234ss',@b);
SELECT @b;
drop PROCEDURE test8;

delimiter //
CREATE PROCEDURE aqltoaql2(in lot_size1 INT,in aql1 DOUBLE,OUT acr2 INT,OUT sample_sizer2 int)
BEGIN 
DECLARE ssclr CHAR(2);
DECLARE acr INT;
DECLARE sample_sizer int;
SELECT q.sscl INTO ssclr FROM qm_aql q WHERE q.lot_size<=lot_size1 order by q.lot_size desc limit 1;
SELECT q2.ac,q2.sample_size INTO acr,sample_sizer FROM qm_aql2 q2 WHERE q2.sscl=ssclr AND q2.aql=aql1 ;
set acr2 =acr;
set sample_sizer2=sample_sizer;
END //
CALL aqltoaql2(8,10,@ac,@sample_size);
SELECT @ac,@sample_size;
DROP PROCEDURE aqltoaql2;


//游标的存储过程
delimiter //
create procedure test.procedure_cursor()
begin
declare t_id int;
declare t_quantity int;
declare done int default false;
declare t_cursor cursor for select * from test.table_cursor;
declare continue handler for not found set done = true;

open t_cursor;
fetch t_cursor into t_id, t_quantity;
repeat 
if (t_id mod 2 = 0) then 
update test.table_cursor set quantity = quantity + 1 where id = t_id;
else 
update test.table_cursor set quantity = quantity + 2 where id = t_id;
end if;
fetch t_cursor into t_id, t_quantity;
until done end repeat;
close t_cursor;
end
//
delimiter ;






//AQL存储过程
delimiter //
create procedure test(IN ptin VARCHAR(50),IN lot_sizein int,IN docin VARCHAR(50))
begin
declare t_pt VARCHAR(50);
declare t_ln INT;
declare t_qty_op INT;
declare t_qty double;
declare t_n_cnt INT;
declare refseq INT DEFAULT 1;
declare seq INT DEFAULT 1;
declare done int default false;
declare t_cursor cursor for select * from qm_pt q WHERE q.pt=ptin;
declare continue handler for not found set done = true;

open t_cursor;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
repeat 
CASE 
WHEN t_qty_op=0 
THEN 
CALL aqltoaql2(lot_sizein,t_qty,@ac,@sample_size);
WHILE refseq<=@sample_size DO
WHILE seq<=t_n_cnt DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(t_pt,docin,t_ln,refseq,seq,@ac);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;


WHEN t_qty_op=1 
THEN 
set refseq=1;
set seq=1;
WHILE refseq<=t_qty DO
WHILE seq<=t_n_cnt DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(t_pt,docin,t_ln,refseq,seq,0);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;

ELSE 
set t_qty=t_qty*lot_sizein;
set refseq=1;
set seq=1;
WHILE refseq<=t_qty DO
WHILE seq<=t_n_cnt DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(t_pt,docin,t_ln,refseq,seq,0);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;

END CASE;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
until done end repeat;
close t_cursor;
end
//
CALL test('16000002',9,'PPO2210090001');
drop procedure test;



delimiter //
CREATE PROCEDURE aqltoaql2(in lot_size1 INT,in aql1 DOUBLE,OUT acr2 INT,OUT sample_sizer2 int)
BEGIN 
DECLARE ssclr CHAR(2);
DECLARE acr INT;
DECLARE sample_sizer int;
SELECT q.sscl INTO ssclr FROM qm_aql q WHERE q.lot_size<=lot_size1 order by q.lot_size desc limit 1;
SELECT q2.ac,q2.sample_size INTO acr,sample_sizer FROM qm_aql2 q2 WHERE q2.sscl=ssclr AND q2.aql=aql1 ;
set acr2 =acr;
set sample_sizer2=sample_sizer;
END //

delimiter //
CREATE PROCEDURE insertintoqm_tr(in qmpt VARCHAR(50),in qmdoc VARCHAR(50),in qmln int,in sample_size int,in qmseq int,in qmac int)
BEGIN 
declare refseq INT DEFAULT 1;
declare seq INT DEFAULT 1;
WHILE refseq<=sample_size DO
WHILE seq<=qmseq DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(qmpt,qmdoc,qmln,refseq,seq,qmac);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;
END 
//

delimiter //
create procedure test(IN ptin VARCHAR(50),IN lot_sizein int,IN docin VARCHAR(50))
begin
declare t_pt VARCHAR(50);
declare t_ln INT;
declare t_qty_op INT;
declare t_qty double;
declare t_n_cnt INT;

declare done int default false;
declare t_cursor cursor for select * from qm_pt q WHERE q.pt=ptin;
declare continue handler for not found set done = true;

open t_cursor;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
repeat 
CASE 
WHEN t_qty_op=0 
THEN 
CALL aqltoaql2(lot_sizein,t_qty,@ac,@sample_size);
CALL insertintoqm_tr(t_pt,docin,t_ln,@sample_size,t_n_cnt,@ac);


WHEN t_qty_op=1 
THEN 
set refseq=1;
set seq=1;
WHILE refseq<=t_qty DO
WHILE seq<=t_n_cnt DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(t_pt,docin,t_ln,refseq,seq,0);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;

ELSE 
set t_qty=t_qty*lot_sizein;
set refseq=1;
set seq=1;
WHILE refseq<=t_qty DO
WHILE seq<=t_n_cnt DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(t_pt,docin,t_ln,refseq,seq,0);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;

END CASE;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
until done end repeat;
close t_cursor;
end
//
CALL test('16000002',8,'PPO2210090001');

//最终结果
delimiter //
CREATE PROCEDURE aqltoaql2(in lot_size1 INT,in aql1 DOUBLE,OUT acr2 INT,OUT sample_sizer2 int)
BEGIN 
DECLARE ssclr CHAR(2);
DECLARE acr INT;
DECLARE sample_sizer int;
SELECT q.sscl INTO ssclr FROM qm_aql q WHERE q.lot_size<=lot_size1 order by q.lot_size desc limit 1;
SELECT q2.ac,q2.sample_size INTO acr,sample_sizer FROM qm_aql2 q2 WHERE q2.sscl=ssclr AND q2.aql=aql1 ;
set acr2 =acr;
set sample_sizer2=sample_sizer;
END //

delimiter //
CREATE PROCEDURE insertintoqm_tr(in qmpt VARCHAR(50),in qmdoc VARCHAR(50),in qmln int,in sample_size int,in qmseq int,in qmac int)
BEGIN 
declare refseq INT DEFAULT 1;
declare seq INT DEFAULT 1;
WHILE refseq<=sample_size DO
WHILE seq<=qmseq DO
INSERT INTO qm_tr(pt,doc,ln,ref1_seq,n_seq,ac) values(qmpt,qmdoc,qmln,refseq,seq,qmac);
set seq=seq+1;
END WHILE;
set refseq=refseq+1;
set seq=1;
END WHILE;
END 
//

delimiter //
create procedure test(IN ptin VARCHAR(50),IN lot_sizein int,IN docin VARCHAR(50))
begin
declare t_pt VARCHAR(50);
declare t_ln INT;
declare t_qty_op INT;
declare t_qty double;
declare t_n_cnt INT;
declare ac INT;
declare sample_size INT;
declare refseq INT DEFAULT 1;
declare seq INT DEFAULT 1;
declare done int default false;
declare t_cursor cursor for select * from qm_pt q WHERE q.pt=ptin;
declare continue handler for not found set done = true;

open t_cursor;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
repeat 
CASE 
WHEN t_qty_op=0 
THEN 
CALL aqltoaql2(lot_sizein,t_qty,ac,sample_size);
CALL insertintoqm_tr(t_pt,docin,t_ln,sample_size,t_n_cnt,ac);


WHEN t_qty_op=1 
THEN 
CALL insertintoqm_tr(t_pt,docin,t_ln,t_qty,t_n_cnt,0);

ELSE 
set t_qty=t_qty*lot_sizein;
CALL insertintoqm_tr(t_pt,docin,t_ln,t_qty,t_n_cnt,0);

END CASE;
fetch t_cursor into t_pt, t_ln,t_qty_op,t_qty,t_n_cnt;
until done end repeat;
close t_cursor;
end
//
CALL test('16000002',8,'PPO2210090001');



//插入1024条数据
DELIMITER //
CREATE PROCEDURE insertadd(IN args INT)
BEGIN

DECLARE i INT DEFAULT 1;
WHILE i<=args DO
INSERT INTO seq2(sys_seq) VALUE (i);
SET i=i+1;
END WHILE;
END
//
CALL insertadd(1024)

//无循环语句
delimiter //
CREATE PROCEDURE aqltoaql2(in lot_size1 INT,in aql1 DOUBLE,OUT acr2 INT,OUT sample_sizer2 int)
BEGIN 
DECLARE ssclr CHAR(2);
DECLARE acr INT;
DECLARE sample_sizer int;
SELECT q.sscl INTO ssclr FROM qm_aql q WHERE q.lot_size<=lot_size1 order by q.lot_size desc limit 1;
SELECT q2.ac,q2.sample_size INTO acr,sample_sizer FROM qm_aql2 q2 WHERE q2.sscl=ssclr AND q2.aql=aql1 ;
set acr2 =acr;
set sample_sizer2=sample_sizer;
END //

delimiter //
create procedure insertintoqm_tr2(in qmpt VARCHAR(50),in qmdoc VARCHAR(50),in sample_size int,in qmac INT,IN qty_opr int)
begin
declare t_ln,t_n_cnt INT;
declare t_qty double;
declare num INT;
declare finalnum INT;


select COUNT(*) INTO num from qm_pt q WHERE q.pt=qmpt AND q.qty_op=qty_opr;
if num=1 then SELECT LN,qty,n_cnt INTO t_ln,t_qty,t_n_cnt from qm_pt q WHERE q.pt=qmpt AND q.qty_op=qty_opr;
case 
when qty_opr=0 then set finalnum=sample_size*t_n_cnt;
when qty_opr=1 then set finalnum=t_qty*t_n_cnt;
when qty_opr=2 then set finalnum=t_qty*sample_size*t_n_cnt;
END case;
insert into qm_tr(pt,doc,LN,ref1_seq,n_seq,ac) (SELECT qmpt,qmdoc,t_ln,(CASE WHEN sys_seq THEN CEIL(sys_seq/t_n_cnt) END),(CASE WHEN mod(sys_seq,t_n_cnt)>0 THEN mod(sys_seq,t_n_cnt) WHEN mod(sys_seq,t_n_cnt)=0 THEN t_n_cnt end),qmac FROM seq2 WHERE sys_seq<=finalnum);
END if;

end
//

delimiter //
create procedure test2(IN ptin VARCHAR(50),IN lot_sizein int,IN docin VARCHAR(50))
begin
declare t_ln,t_n_cnt INT;
declare t_qty double;
declare ac INT;
declare sample_size INT;
SELECT LN,qty,n_cnt INTO t_ln,t_qty,t_n_cnt from qm_pt q WHERE q.pt=ptin AND q.qty_op=0;
CALL aqltoaql2(lot_sizein,t_qty,ac,sample_size);
CALL insertintoqm_tr2(ptin,docin,sample_size,ac,0);
CALL insertintoqm_tr2(ptin,docin,sample_size,0,1);
CALL insertintoqm_tr2(ptin,docin,lot_sizein,0,2);

end
//
CALL test2('16000002',8,'PPO2210090001');
DROP PROCEDURE test2;





delimiter //
create procedure test(IN ptin VARCHAR(50),IN lot_sizein int,IN docin VARCHAR(50))
begin
declare t_ln,t_n_cnt INT;
declare t_qty double;
declare num,num1,num2 INT;
declare ac INT;
declare sample_size INT;
select COUNT(*) INTO num from qm_pt q WHERE q.pt=ptin AND q.qty_op=0;
if num=1 then SELECT LN,qty,n_cnt INTO t_ln,t_qty,t_n_cnt from qm_pt q WHERE q.pt=ptin AND q.qty_op=0;
CALL aqltoaql2(lot_sizein,t_qty,ac,sample_size);
insert into qm_tr(pt,doc,LN,ref1_seq,n_seq,ac) (SELECT ptin,docin,t_ln,(CASE WHEN sys_seq THEN CEIL(sys_seq/t_n_cnt) END),(CASE WHEN mod(sys_seq,t_n_cnt)>0 THEN mod(sys_seq,t_n_cnt) WHEN mod(sys_seq,t_n_cnt)=0 THEN t_n_cnt end),ac FROM seq2 WHERE sys_seq<=sample_size*t_n_cnt);
END if;
select COUNT(*) INTO num1 from qm_pt q WHERE q.pt=ptin AND q.qty_op=1;
if num1=1 then SELECT LN,qty,n_cnt INTO t_ln,t_qty,t_n_cnt from qm_pt q WHERE q.pt=ptin AND q.qty_op=1;
insert into qm_tr(pt,doc,LN,ref1_seq,n_seq,ac) (SELECT ptin,docin,t_ln,(CASE WHEN sys_seq THEN CEIL(sys_seq/t_n_cnt) END),(CASE WHEN mod(sys_seq,t_n_cnt)>0 THEN mod(sys_seq,t_n_cnt) WHEN mod(sys_seq,t_n_cnt)=0 THEN t_n_cnt END),0 FROM seq2 WHERE sys_seq<=t_qty*t_n_cnt);
END if;
select COUNT(*) INTO num2 from qm_pt q WHERE q.pt=ptin AND q.qty_op=2;
if num2=1 then SELECT LN,qty,n_cnt INTO t_ln,t_qty,t_n_cnt from qm_pt q WHERE q.pt=ptin AND q.qty_op=2;
insert into qm_tr(pt,doc,LN,ref1_seq,n_seq,ac) (SELECT ptin,docin,t_ln,(CASE WHEN sys_seq THEN CEIL(sys_seq/t_n_cnt) END),(CASE WHEN mod(sys_seq,t_n_cnt)>0 THEN mod(sys_seq,t_n_cnt) WHEN mod(sys_seq,t_n_cnt)=0 THEN t_n_cnt END),0 FROM seq2 WHERE sys_seq<=t_qty*lot_sizein*t_n_cnt);
END if;
end
//
CALL test('16000002',8,'PPO2210090001');
DROP PROCEDURE test;


insert into qm_aql(inspection_level,lot_size,sscl) values('II',16,'C');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',26,'D');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',51,'E');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',91,'F');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',151,'G');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',281,'H');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',501,'J');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',1201,'K');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',3201,'L');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',10001,'M');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',35001,'N');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',150001,'P');
insert into qm_aql(inspection_level,lot_size,sscl) values('II',500001,'Q');


insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.010,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.015,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.025,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.040,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.065,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.100,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.150,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.250,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.400,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',0.650,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',1.000,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',1.500,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',2.500,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',4.000,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',6.500,2,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',10.000,2,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',15.000,2,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',25.000,2,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',40.000,2,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',65.000,2,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',100.000,2,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',150.000,2,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',250.000,2,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',400.000,2,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',650.000,2,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('A',1000.000,2,30);

insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.010,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.015,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.025,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.040,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.065,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.100,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.150,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.250,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.400,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',0.650,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',1.000,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',1.500,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',2.500,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',4.000,3,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',6.500,3,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',10.000,3,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',15.000,3,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',25.000,3,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',40.000,3,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',65.000,3,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',100.000,3,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',150.000,3,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',250.000,3,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',400.000,3,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',650.000,3,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('B',1000.000,3,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.010,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.015,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.025,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.040,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.065,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.100,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.150,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.250,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.400,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',0.650,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',1.000,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',1.500,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',2.500,8,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',4.000,8,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',6.500,8,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',10.000,8,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',15.000,8,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',25.000,8,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',40.000,8,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',65.000,8,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',100.000,8,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',150.000,8,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',250.000,8,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',400.000,8,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',650.000,8,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('D',1000.000,8,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.010,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.015,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.025,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.040,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.065,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.100,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.150,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.250,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.400,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',0.650,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',1.000,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',1.500,13,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',2.500,13,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',4.000,13,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',6.500,13,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',10.000,13,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',15.000,13,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',25.000,13,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',40.000,13,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',65.000,13,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',100.000,13,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',150.000,13,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',250.000,13,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',400.000,13,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',650.000,13,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('E',1000.000,13,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.010,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.015,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.025,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.040,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.065,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.100,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.150,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.250,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.400,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',0.650,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',1.000,20,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',1.500,20,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',2.500,20,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',4.000,20,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',6.500,20,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',10.000,20,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',15.000,20,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',25.000,20,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',40.000,20,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',65.000,20,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',100.000,20,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',150.000,20,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',250.000,20,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',400.000,20,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',650.000,20,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('F',1000.000,20,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.010,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.015,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.025,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.040,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.065,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.100,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.150,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.250,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.400,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',0.650,32,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',1.000,32,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',1.500,32,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',2.500,32,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',4.000,32,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',6.500,32,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',10.000,32,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',15.000,32,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',25.000,32,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',40.000,32,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',65.000,32,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',100.000,32,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',150.000,32,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',250.000,32,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',400.000,32,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',650.000,32,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('G',1000.000,32,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.010,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.015,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.025,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.040,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.065,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.100,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.150,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.250,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.400,50,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',0.650,50,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',1.000,50,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',1.500,50,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',2.500,50,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',4.000,50,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',6.500,50,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',10.000,50,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',15.000,50,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',25.000,50,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',40.000,50,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',65.000,50,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',100.000,50,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',150.000,50,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',250.000,50,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',400.000,50,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',650.000,50,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('H',1000.000,50,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.010,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.015,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.025,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.040,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.065,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.100,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.150,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.250,80,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.400,80,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',0.650,80,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',1.000,80,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',1.500,80,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',2.500,80,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',4.000,80,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',6.500,80,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',10.000,80,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',15.000,80,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',25.000,80,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',40.000,80,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',65.000,80,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',100.000,80,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',150.000,80,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',250.000,80,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',400.000,80,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',650.000,80,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('J',1000.000,80,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.010,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.015,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.025,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.040,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.065,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.100,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.150,125,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.250,125,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.400,125,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',0.650,125,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',1.000,125,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',1.500,125,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',2.500,125,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',4.000,125,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',6.500,125,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',10.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',15.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',25.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',40.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',65.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',100.000,125,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',150.000,125,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',250.000,125,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',400.000,125,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',650.000,125,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('K',1000.000,125,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.010,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.015,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.025,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.040,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.065,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.100,200,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.150,200,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.250,200,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.400,200,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',0.650,200,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',1.000,200,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',1.500,200,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',2.500,200,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',4.000,200,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',6.500,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',10.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',15.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',25.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',40.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',65.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',100.000,200,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',150.000,200,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',250.000,200,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',400.000,200,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',650.000,200,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('L',1000.000,200,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.010,315,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.015,315,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.025,315,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.040,315,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.065,315,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.100,315,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.150,315,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.250,315,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.400,315,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',0.650,315,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',1.000,315,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',1.500,315,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',2.500,315,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',4.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',6.500,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',10.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',15.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',25.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',40.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',65.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',100.000,315,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',150.000,315,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',250.000,315,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',400.000,315,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',650.000,315,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('M',1000.000,315,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.010,500,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.015,500,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.025,500,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.040,500,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.065,500,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.100,500,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.150,500,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.250,500,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.400,500,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',0.650,500,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',1.000,500,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',1.500,500,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',2.500,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',4.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',6.500,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',10.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',15.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',25.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',40.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',65.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',100.000,500,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',150.000,500,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',250.000,500,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',400.000,500,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',650.000,500,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('N',1000.000,500,44);

insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.010,1250,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.015,1250,0);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.025,1250,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.040,1250,1);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.065,1250,2);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.100,1250,3);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.150,1250,5);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.250,1250,7);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.400,1250,10);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',0.650,1250,14);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',1.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',1.500,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',2.500,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',4.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',6.500,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',10.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',15.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',25.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',40.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',65.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',100.000,1250,21);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',150.000,1250,30);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',250.000,1250,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',400.000,1250,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',650.000,1250,44);
insert into qm_aql2(sscl,aql,sample_size,ac) values('Q',1000.000,1250,44);